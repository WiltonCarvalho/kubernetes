---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-initial-root-password
stringData:
  gitlab_root_password: |
    KoohooX0Eisoo6su
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab
  labels:
    app: gitlab
spec:
  selector:
    matchLabels:
      app: gitlab
  serviceName: "gitlab"
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 256Mi
      - name: initial-root-password
        secret:
          secretName: gitlab-initial-root-password
      containers:
      - name: gitlab
        image: localhost:32000/omnibus-gitlab/gitlab-ce:17.4.0-ce.0
        ports:
        - containerPort: 80
          name: gitlab-http
        - containerPort: 22
          name: gitlab-ssh
        volumeMounts:
        - name: data
          mountPath: /var/opt/gitlab
        - name: logs
          mountPath: /var/log/gitlab
        - name: config
          mountPath: /etc/gitlab
        - name: dshm
          mountPath: /dev/shm
        - name: initial-root-password
          mountPath: /run/secrets/gitlab_root_password
          subPath: "gitlab_root_password"
          readOnly: true
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: |
            #from_file('/omnibus_config.rb')
            #gitlab_rails['initial_root_password'] = File.read('/run/secrets/gitlab_root_password').gsub("\n", "")
            gitlab_rails['initial_root_password'] = 'KoohooX0Eisoo6su'
            external_url 'https://gitlab.wiltoncarvalho.com'
            gitlab_rails['gitlab_shell_ssh_port'] = 443
            gitlab_rails['gitlab_ssh_host'] = 'gitlab-ssh.wiltoncarvalho.com'
            registry_external_url 'https://registry.wiltoncarvalho.com'
            registry_nginx['listen_port'] = 80
            registry_nginx['listen_https'] = false
            registry_nginx['redirect_http_to_https'] = false
            letsencrypt['enable'] = false
            nginx['listen_port'] = 80
            nginx['listen_https'] = false
            nginx['redirect_http_to_https'] = false
            mattermost_nginx['redirect_http_to_https'] = false
            # https://docs.gitlab.com/omnibus/settings/memory_constrained_envs.html
            puma['worker_processes'] = 0
            sidekiq['max_concurrency'] = 10
            prometheus_monitoring['enable'] = false
            gitlab_rails['monitoring_whitelist'] = ['127.0.0.0/8', '10.0.0.0/8']
            gitlab_rails['time_zone'] = 'America/Sao_Paulo'
            gitlab_rails['ldap_enabled'] = true
            gitlab_rails['ldap_servers'] = {
              'main' => {
                'label' => 'LDAP',
                'host' =>  'ldap.mydomain.com',
                'port' => 636,
                'uid' => 'sAMAccountName',
                'bind_dn' => 'CN=Gitlab,OU=Users,DC=domain,DC=com',
                'password' => 'bind_user_password',
                'encryption' => 'simple_tls',
                'verify_certificates' => false,
                'timeout' => 10,
                'active_directory' => false,
                'user_filter' => '(employeeType=developer)',
                'base' => 'dc=example,dc=com',
                'lowercase_usernames' => 'false',
                'retry_empty_result_with_codes' => [80],
                'allow_username_or_email_login' => false,
                'block_auto_created_users' => false
              }
            }
        startupProbe:
          failureThreshold: 20
          httpGet:
            path: /-/health
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/liveness
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/readiness
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitlab
  name: gitlab
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: gitlab-http
  selector:
    app: gitlab
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitlab
  name: gitlab-registry
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: gitlab-http
  selector:
    app: gitlab
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitlab
  name: gitlab-ssh
spec:
  type: NodePort
  ports:
  - name: ssh
    port: 443
    protocol: TCP
    targetPort: gitlab-ssh
    nodePort: 32443
  selector:
    app: gitlab
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: gitlab
  name: gitlab
spec:
  ingressClassName: public
  rules:
  - host: gitlab.wiltoncarvalho.com
    http:
      paths:
      - backend:
          service:
            name: gitlab
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  labels:
    app: gitlab
  name: gitlab-registry
spec:
  ingressClassName: public
  rules:
  - host: registry.wiltoncarvalho.com
    http:
      paths:
      - backend:
          service:
            name: gitlab-registry
            port:
              number: 80
        path: /
        pathType: Prefix
