# helm repo add jetstack https://charts.jetstack.io
# helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.17.1 --set crds.enabled=true --set extraArgs="{--dns01-recursive-nameservers-only,--dns01-recursive-nameservers=1.1.1.1:53,8.8.8.8:53}"
# cloudflare_api_token="xxxxxxxxxxxxxxxxxxxxx"
# account_id=$(curl -s "https://api.cloudflare.com/client/v4/accounts" --header "Authorization: Bearer $cloudflare_api_token" | jq -r '.result[].id')
# curl "https://api.cloudflare.com/client/v4/accounts/$account_id/tokens/verify" --header "Authorization: Bearer $cloudflare_api_token"
# ZONES: curl -s "https://api.cloudflare.com/client/v4/zones" -H "Authorization: Bearer $cloudflare_api_token" | jq -r '.result[] | [.id, .name] | join(" ")'
# curl "https://api.cloudflare.com/client/v4/zones/3b00f444810e99fd1ebd9b1e2bdf905a" -H "Authorization: Bearer $cloudflare_api_token"
# curl "https://api.cloudflare.com/client/v4/zones/3b00f444810e99fd1ebd9b1e2bdf905a/dns_records" -H "Authorization: Bearer $cloudflare_api_token"
# kubectl create secret generic cloudflare-api-token --namespace cert-manager --from-literal=api-token="$cloudflare_api_token"
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory 
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - dns01:
        cloudflare:
          email: wiltonweb@gmail.com
          apiTokenSecretRef:
            name: cloudflare-api-token
            key: api-token

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: default-ssl-cert
  namespace: default
spec:
  secretName: default-ssl-secret
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  commonName: wiltoncarvalho.com
  dnsNames:
  - "wiltoncarvalho.com"
  - "*.wiltoncarvalho.com"
